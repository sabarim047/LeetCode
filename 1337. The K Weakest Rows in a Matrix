class Pair{
    int value;
    int index;
    Pair(int value ,int index){
        this.value=value;
        this.index=index;
    }

}
class Solution {
    public int[] kWeakestRows(int[][] mat, int k) {
        int[]counts=new int[mat.length];
        for(int i=0;i<mat.length;i++){
            int count=0;
            for(int j=0;j<mat[0].length;j++){
                if(mat[i][j]==1){
                    count++;
                }
            }
            counts[i]=count;
        }
        Pair []pairs=new Pair[mat.length];
        for(int i=0;i<mat.length;i++){
           pairs[i]=new Pair(counts[i],i);
        }
        Arrays.sort(pairs,(b,c)->Integer.compare(b.value,c.value));
        int []sortedindex=new int[k];
        for(int i=0;i<k;i++){
            sortedindex[i]=pairs[i].index;
        }
        return sortedindex;
       
        }
    }
